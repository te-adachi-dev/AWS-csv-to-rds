AWSTemplateFormatVersion: '2010-09-09'
Description: 'ETL System - Lambda Functions Stack'

Parameters:
  ProjectName:
    Type: String
    Description: 'Project name for resource naming'

  SourceBucket:
    Type: String
    Description: 'S3 Bucket containing Lambda code and SQL files'

  CSVProcessorCodeKey:
    Type: String
    Description: 'S3 Key for CSV Processor Lambda code'

  QueryExecutorCodeKey:
    Type: String
    Description: 'S3 Key for Query Executor Lambda code'

  TableCreatorCodeKey:
    Type: String
    Description: 'S3 Key for Table Creator Lambda code'

  Psycopg2LayerKey:
    Type: String
    Description: 'S3 Key for psycopg2 Lambda Layer'

  InitSqlPrefix:
    Type: String
    Description: 'S3 Prefix for initialization SQL files'

  DBMasterUsername:
    Type: String
    Description: 'RDS Master Username'

  DBMasterPassword:
    Type: String
    NoEcho: true
    Description: 'RDS Master Password'

  VPCId:
    Type: String
    Description: 'VPC ID from Network Stack'

  PrivateSubnet1Id:
    Type: String
    Description: 'Private Subnet 1 ID from Network Stack'

  PrivateSubnet2Id:
    Type: String
    Description: 'Private Subnet 2 ID from Network Stack'

  LambdaSecurityGroupId:
    Type: String
    Description: 'Lambda Security Group ID from Network Stack'

  RDSEndpoint:
    Type: String
    Description: 'RDS Endpoint from Database Stack'

  RDSPort:
    Type: String
    Description: 'RDS Port from Database Stack'

  DataBucketName:
    Type: String
    Description: 'Data Bucket Name from Database Stack'

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${SourceBucket}/*'
                  - !Sub 'arn:aws:s3:::${SourceBucket}'
                  - !Sub 'arn:aws:s3:::${DataBucketName}/*'
                  - !Sub 'arn:aws:s3:::${DataBucketName}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-lambda-execution-role'

  # psycopg2 Lambda Layer
  Psycopg2Layer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub '${ProjectName}-psycopg2-layer'
      Description: 'psycopg2 library for PostgreSQL connectivity'
      Content:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref Psycopg2LayerKey
      CompatibleRuntimes:
        - python3.11

  # Lambda Function 1: Table Creator
  TableCreatorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-table-creator'
      Runtime: python3.11
      Handler: table_creator.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 900
      MemorySize: 1024
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupId
        SubnetIds:
          - !Ref PrivateSubnet1Id
          - !Ref PrivateSubnet2Id
      Environment:
        Variables:
          DB_HOST: !Ref RDSEndpoint
          DB_PORT: !Ref RDSPort
          DB_NAME: postgres
          DB_USER: !Ref DBMasterUsername
          DB_PASSWORD: !Ref DBMasterPassword
          S3_BUCKET: !Ref SourceBucket
          SQL_PREFIX: !Ref InitSqlPrefix
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref TableCreatorCodeKey
      Layers:
        - !Ref Psycopg2Layer
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-table-creator'

  # Lambda Function 2: CSV Processor
  CSVProcessorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-csv-processor'
      Runtime: python3.11
      Handler: csv_processor.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 900
      MemorySize: 1024
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupId
        SubnetIds:
          - !Ref PrivateSubnet1Id
          - !Ref PrivateSubnet2Id
      Environment:
        Variables:
          DB_HOST: !Ref RDSEndpoint
          DB_PORT: !Ref RDSPort
          DB_NAME: postgres
          DB_USER: !Ref DBMasterUsername
          DB_PASSWORD: !Ref DBMasterPassword
          S3_BUCKET: !Ref DataBucketName
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref CSVProcessorCodeKey
      Layers:
        - !Ref Psycopg2Layer
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-csv-processor'

  # Lambda Function 3: Query Executor
  QueryExecutorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-query-executor'
      Runtime: python3.11
      Handler: query_executor.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 900
      MemorySize: 1024
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupId
        SubnetIds:
          - !Ref PrivateSubnet1Id
          - !Ref PrivateSubnet2Id
      Environment:
        Variables:
          DB_HOST: !Ref RDSEndpoint
          DB_PORT: !Ref RDSPort
          DB_NAME: postgres
          DB_USER: !Ref DBMasterUsername
          DB_PASSWORD: !Ref DBMasterPassword
          S3_BUCKET: !Ref DataBucketName
          OUTPUT_PREFIX: 'query-results/'
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref QueryExecutorCodeKey
      Layers:
        - !Ref Psycopg2Layer
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-query-executor'

Outputs:
  LambdaExecutionRoleArn:
    Description: Lambda Execution Role ARN
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-LambdaExecutionRoleArn'

  TableCreatorFunctionName:
    Description: Table Creator Lambda Function Name
    Value: !Ref TableCreatorLambdaFunction
    Export:
      Name: !Sub '${ProjectName}-TableCreatorFunctionName'

  TableCreatorFunctionArn:
    Description: Table Creator Lambda Function ARN
    Value: !GetAtt TableCreatorLambdaFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-TableCreatorFunctionArn'

  CSVProcessorFunctionName:
    Description: CSV Processor Lambda Function Name
    Value: !Ref CSVProcessorLambdaFunction
    Export:
      Name: !Sub '${ProjectName}-CSVProcessorFunctionName'

  CSVProcessorFunctionArn:
    Description: CSV Processor Lambda Function ARN
    Value: !GetAtt CSVProcessorLambdaFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-CSVProcessorFunctionArn'

  QueryExecutorFunctionName:
    Description: Query Executor Lambda Function Name
    Value: !Ref QueryExecutorLambdaFunction
    Export:
      Name: !Sub '${ProjectName}-QueryExecutorFunctionName'

  QueryExecutorFunctionArn:
    Description: Query Executor Lambda Function ARN
    Value: !GetAtt QueryExecutorLambdaFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-QueryExecutorFunctionArn'

  Psycopg2LayerArn:
    Description: psycopg2 Lambda Layer ARN
    Value: !Ref Psycopg2Layer
    Export:
      Name: !Sub '${ProjectName}-Psycopg2LayerArn'